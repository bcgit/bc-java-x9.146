
plugins {
  id "biz.aQute.bnd.builder" version "7.0.0"
}

sourceSets {
    java9 {
        java {
            srcDirs = ['src/main/jdk1.9']
        }
    }
}

dependencies {
    implementation project(':core')
    implementation project(':prov')
    implementation project(':util')

    java9Implementation project(':prov')
    java9Implementation project(':util')
    java9Implementation files(sourceSets.main.output.classesDirs) {
        builtBy compileJava
    }

    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
}

compileJava {
    javaCompiler = javaToolchains.compilerFor {
        languageVersion = JavaLanguageVersion.of(17)
    }
    targetCompatibility = 1.8;
    sourceCompatibility = 1.8;
}


compileJava9Java {
    javaCompiler = javaToolchains.compilerFor {
        languageVersion = JavaLanguageVersion.of(17)
    }
    sourceCompatibility = 9
    targetCompatibility = 9
    options.compilerArgs += [
            '--module-path', "${bc_prov}${File.pathSeparator}${bc_util}"
    ]

    options.sourcepath = files(['src/main/java', 'src/main/jdk1.9'])
}


jar.archiveBaseName = "bcpkix-$vmrange"


task sourcesJar(type: Jar) {
    archiveBaseName = jar.archiveBaseName
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
    exclude("**/*.so")
    into('META-INF/versions/9') {
        from sourceSets.java9.allSource
    }
}

jar {
    from sourceSets.main.output
    into('META-INF/versions/9') {
        from sourceSets.java9.output
    }

    String packages = 'org.bouncycastle.{cert|cmc|cms|dvcs|eac|est|its|mime|mozilla|voms|operator|pkix|openssl|pkcs|tsp}.*'

    String v = "${rootProject.extensions.ext.bundle_version}"

    manifest.attributes('Multi-Release': 'true')
    manifest.attributes('Bundle-Name': 'bcpkix')
    manifest.attributes('Bundle-SymbolicName': 'bcpkix')
    manifest.attributes('Bundle-RequiredExecutionEnvironment': 'JavaSE-1.8')
    manifest.attributes('Export-Package': "${packages};version=${v}")
    manifest.attributes('Import-Package': "java.*;resolution:=optional,javax.*;resolution:=optional,!${packages},org.bouncycastle.*;version=\"[${v},${maxVersion})\"")
    manifest.attributes('Bundle-Version': "${v}")
}


task javadocJar(type: Jar, dependsOn: javadoc) {
  archiveBaseName = jar.archiveBaseName
  archiveClassifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

test {
    forkEvery = 1;
    maxParallelForks = 8;
}
